{"version":3,"sources":["Menu.js","NotFound/index.js","router/history.js","App.js","logo.svg","serviceWorker.js","service.js","AppStore.js","index.js","router/router.js"],"names":["Sider","Header","SubMenu","Content","Menus","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","SelectedKey","str","window","location","pathname","setState","_this$props","collapsed","routers","react_default","a","createElement","breakpoint","trigger","collapsible","onBreakpoint","broken","console","log","className","src","Logo","alt","menu","theme","mode","defaultSelectedKeys","RouteWithSubRoutes","route","map","item","routes","key","path","title","icon","type","name","hideInMenu","Item","react_router_dom","to","Component","App","createHistory","onCollapsedToggleClick","loggedIn","store","Menu","_this2","fetchTest","then","res","code","History","push","_this3","_this$state","index_module","react_router","render","layout","id","src_Menu","App_Header","style","background","padding","onClick","App_Content","margin","minHeight","react","fallback","spin","tip","exact","from","component","NotFound","module","exports","__webpack_require__","p","Boolean","hostname","match","localhost","fetchRequest","_x","_x2","_x3","_fetchRequest","apply","arguments","_callee","url","method","body","regenerator_default","wrap","_context","prev","next","axios","baseURL","data","headers","X-Requested-With","Accept","ApiKey","response","status","notification","message","msg","description","statusText","catch","error","request","stack","abrupt","sent","stop","Todo","Math","random","sad","fetchPro","Promise","reslove","reject","Fetch","fetchLogin","decorate","observable","action","AppStore","ReactDOM","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","lazy","all","e","bind","__webpack_exports__"],"mappings":"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","file":"static/js/main.f9ff1b2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Provider, observer, inject } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport Logo from \"./logo.svg\";\nconst { Header, Sider, Content } = Layout;\n\n\nconst { SubMenu } = Menu;\nconst RouteWithSubRoutes = route => { //这是循环递归菜单；\n    return route.map(item => {\n        if (item.routes) {\n            return (\n                <SubMenu key={item.path}\n                    title={\n                        <span>\n                            <Icon type={item.icon} />\n                            <span>{item.name}</span>\n                        </span>\n                    } >\n                    {RouteWithSubRoutes(item.routes)}\n                </SubMenu>\n            )\n        }\n        return ((!item.hideInMenu) ?\n            <Menu.Item key={item.path}>\n                <Link to={item.path}><Icon type={item.icon} /><span>{item.name}</span></Link>\n            </Menu.Item> : null)\n    })\n};\n\n\n@inject(\"store\") @observer\nclass Menus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            SelectedKey: [\"/tacos\"]\n        }\n    }\n\n    componentWillMount() {\n        //const str = window.location.hash.match(/#(\\S*)/)[1];//采用 HashRouter 路由\n        const str = window.location.pathname;//采用 BrowserRouter 路由（需要服务端配置路由返回）\n        this.setState({ SelectedKey: [str] });\n    }\n\n    componentDidMount() {\n        //        const str = window.location.hash.match(/#(\\S*)/);\n    }\n\n    render() {\n        const { SelectedKey } = this.state;\n        const { collapsed, routers } = this.props;\n\n\n        return (\n            <Sider breakpoint=\"sm\"\n                trigger={null}\n                collapsible\n                collapsed={collapsed}\n                onBreakpoint={broken => {\n                    console.log(broken);\n                }}>\n                <div className=\"logo\"><img src={Logo} alt=\"logo\" />后台管理</div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={SelectedKey}>\n                    {\n                        RouteWithSubRoutes(routers)\n                    }\n                </Menu>\n            </Sider>\n        )\n    }\n}\n\nexport default Menus;","import React, { Component } from 'react';\nimport { Provider, observer, inject } from 'mobx-react'\n\n@inject(\"store\") @observer\nclass App extends Component {\n\n    componentWillMount () {\n//        const { store: { loggedIn },history } = this.props;\n    }\n    \n    componentDidMount() {\n//        const { store: { loggedIn },history } = this.props;\n//        !loggedIn && history.push(\"/login\");\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <header>\n                    <div>\n                        404\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n\n\n\n","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import React, { Component, Suspense } from 'react';\nimport { Provider, observer, inject } from 'mobx-react'\nimport { HashRouter, BrowserRouter } from 'react-router-dom'\nimport { Router, Switch, Route, Redirect } from 'react-router'\nimport './App.css';\nimport routers from './router/router';\nimport Menus from './Menu';\nimport NotFound from './NotFound/index';\nimport History from './router/history';\nimport { Layout, Icon, Spin } from 'antd';\n// import 'antd/dist/antd.css';\n\nconst { Header, Sider, Content } = Layout;\n\nconst RouteWithSubRoutes = route => ( //这是循环递归路由，暂不使用；\n    <Route exact path={route.path}\n        render={props => {\n            return (\n                <route.component {...props}\n                    routes={route.routes}\n                />\n            )\n        }\n        }\n    />\n);\n\n@inject(\"store\") @observer\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loggedIn: props.store.loggedIn,\n            collapsed: false,\n            Menu: [{ path: \"/login\", name: 'Login', icon: \"user\", hideInMenu: true }, { path: \"/tacos\", name: 'tacos', icon: \"user\" }]\n        }\n    }\n\n    componentWillMount() {\n\n    }\n\n    componentDidMount() {\n        //        const loggedIn = sessionStorage.getItem(\"loggedIn\");\n        const { store: { fetchTest } } = this.props;\n        fetchTest().then(res => {\n            if (res.code == 200) {\n                this.props.store.loggedIn = true;\n                History.push(routers[1].path);\n                this.setState({ loggedIn: true, Menu: routers });\n            } else {\n                // window.location.href = \"/login\";\n                this.props.store.loggedIn = false;\n                History.push(\"/login\");\n                this.setState({ loggedIn: false });\n            }\n        })\n    }\n\n    onCollapsedToggleClick = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render() {\n        const { loggedIn, collapsed, Menu } = this.state;\n        console.log(\"loggedIn,\", routers)\n        return (\n            <Provider {...this.props}>\n                <BrowserRouter>\n                    <Route path=\"/\" render={() => (\n                        loggedIn ? (\n                            <Layout id=\"components-layout-demo-custom-trigger\" >\n                                <Menus routers={Menu} collapsed={collapsed} /> { /*这是左侧导航栏*/}\n                                <Layout>\n                                    <Header style={{ background: '#fff', padding: 0 }}>\n                                        <Icon className=\"trigger\"\n                                            type={collapsed ? 'menu-unfold' : 'menu-fold'}\n                                            onClick={this.onCollapsedToggleClick} />\n                                    </Header>\n                                    <Content style={\n                                        {\n                                            margin: '24px 16px',\n                                            padding: 24,\n                                            background: '#fff',\n                                            minHeight: 280,\n                                        }}>\n                                        <Suspense fallback={< Spin tip=\"Loading...\" > </Spin>}>\n                                            <Switch>\n                                                <Redirect exact from='/' to={Menu[1].path} />\n                                                {\n                                                    routers.map(route => {\n                                                        return (!route.hideInMenu) ?\n                                                            <Route key={route.path} exact path={route.path} component={route.component} /> : null\n                                                    })\n                                                }\n                                                {\n                                                    /*{routers.map((route, i) =>\n                                                    <RouteWithSubRoutes key={i} {...route} />)}*/\n                                                }\n                                                <Route component={NotFound} />\n                                            </Switch >\n                                        </Suspense>\n                                    </Content >\n                                </Layout>\n                            </Layout >) :\n                            (\n                                <Suspense fallback={< Spin tip=\"Loading...\" > </Spin>}>\n                                    <Switch>\n                                        <Redirect exact from='/' to=\"/login\" />\n                                        <Route path=\"/login\" component={routers[0].component} />\n                                        <Route component={NotFound} />\n                                        404444\n                                    </Switch >\n                                </Suspense>\n                            )\n                    )\n                    } />\n                </BrowserRouter>\n            </Provider >);\n    }\n}\n\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\nimport { Provider, observer, inject } from 'mobx-react'\nimport { notification } from 'antd';\n\nconst foodstp = \"https://foodstp.com/\";\nconst localhost = \"http://localhost:3000/\";\n\n\nexport default async function fetchRequest(url, method, body) {\n    return await axios({\n        method: method,\n        url: url,\n        baseURL: localhost,\n        data: body,\n        headers: { 'X-Requested-With': 'XMLHttpRequest', 'Accept': \"*/*\", 'ApiKey': '88d85d8a6b9d4e409e817dca1c2cd1fb' },\n    }).then(function(response) {\n        console.log(\"response:\", response, this);\n        if (response.status >= 200 || response.status <= 304) {\n            return response.data;\n        } else {\n            notification['warning']({\n                message: response.message || response.msg,\n                description: response.statusText,\n                onClick: () => {\n                    console.log(response);\n                },\n            });\n        }\n    }).catch(function(error) {\n        console.error(\"error:\", error);\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            notification['error']({\n                message: error.message,\n                description: error.response.statusText,\n                onClick: () => {\n                    console.log(error.response);\n                },\n            });\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            notification['error']({\n                message: \"已发出请求，未收到答复！\",\n                description: error.request.statusText,\n                onClick: () => {\n                    console.log(error.request);\n                },\n            });\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            notification['error']({\n                message: error.message,\n                description: error.stack,\n                onClick: () => {\n                    console.log(error);\n                },\n            });\n        }\n        return { status: 500 };\n    });\n\n}","import { decorate, observable, action } from \"mobx\";\nimport Fetch from \"./service\";\n//import List from './Mock/list.json';\n\nclass Todo {\n    constructor() {\n\n    }\n    id = Math.random();\n    title = \"app全局\";\n    loggedIn = false; //是否登陆\n    sad = true;\n    fetchPro = (body) => {\n        return new Promise(function(reslove,reject){\n\n            reslove({code:200})  //状态由等待变为成功，传的参数作为then函数中成功函数的实参\n        \n            //reject('失败')  //状态由等待变为失败，传的参数作为then函数中失败函数的实参\n        \n        });\n\n\n    };\n    fetchTest = (body) => {\n        // 测试\n        return Fetch(\"/users/test\", \"post\", body);\n    }\n    fetchLogin = (body) => {\n        // 登录\n        return Fetch(\"/users/login\", \"post\", body);\n    }\n\n}\ndecorate(Todo, {\n    title: observable,\n    collapsed: observable,\n    fetchLogin: action,\n    fetchPro: action\n});\nexport default new Todo();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './AppStore';\n\nReactDOM.render(<App store={Store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { lazy } from 'react';\n\nconst Register = lazy(() => import('../User/Register/index'));\nexport default [\n\n    {\n        path: \"/login\",\n        name: 'Login',\n        icon: \"user\",\n        hideInMenu: true,\n        component: lazy(() => import('../User/Login/index'))\n    },\n    {\n        path: \"/tacos\",\n        name: 'tacos',\n        icon: \"home\",\n        component: lazy(() => import('../home/home/index')),\n    },\n    {\n        path: \"/tac\",\n        name: 'tac',\n        icon: \"user\",\n        routes: [\n            {\n                path: \"/tac/bus\",\n                name: \"/tac/bus\",\n                icon: \"user\",\n                component: lazy(() => import('../About/About/index')),\n                routes: [\n                    {\n                        path: \"/tac/bus/bus2\",\n                        name: \"/tac/bus/bus2\",\n                        icon: \"user\",\n                        component: lazy(() => import('../About/About/index'))\n                    },\n                    {\n                        path: \"/tac/bus/bus3\",\n                        name: \"/tac/bus/bus3\",\n                        icon: \"user\",\n                        component: lazy(() => import('../About/About/index'))\n                    }\n                ]\n            },\n            {\n                path: \"/tac/cart\",\n                name: \"/tac/Cart\",\n                icon: \"user\",\n                component: lazy(() => import('../About/About/index'))\n            }\n        ]\n    },\n    {\n        path: \"/about\",\n        name: 'About',\n        icon: \"user\",\n        component: lazy(() => import('../About/About/index'))\n    }\n]"],"sourceRoot":""}